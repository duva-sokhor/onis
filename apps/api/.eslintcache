[{"/Users/giva/dev/opengolia/onis/apps/api/src/builder.ts":"1","/Users/giva/dev/opengolia/onis/apps/api/src/context.ts":"2","/Users/giva/dev/opengolia/onis/apps/api/src/db.ts":"3","/Users/giva/dev/opengolia/onis/apps/api/src/schema/index.ts":"4","/Users/giva/dev/opengolia/onis/apps/api/src/server.ts":"5"},{"size":557,"mtime":1688107231739,"results":"6","hashOfConfig":"7"},{"size":363,"mtime":1688140842822,"results":"8","hashOfConfig":"7"},{"size":57,"mtime":1688144539593,"results":"9","hashOfConfig":"7"},{"size":264,"mtime":1688070524610,"results":"10","hashOfConfig":"7"},{"size":1279,"mtime":1688144532931,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12zxn3z",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/giva/dev/opengolia/onis/apps/api/src/builder.ts",["27"],[],"/Users/giva/dev/opengolia/onis/apps/api/src/context.ts",[],[],"/Users/giva/dev/opengolia/onis/apps/api/src/db.ts",[],[],"/Users/giva/dev/opengolia/onis/apps/api/src/schema/index.ts",[],[],"/Users/giva/dev/opengolia/onis/apps/api/src/server.ts",[],[],{"ruleId":"28","severity":2,"message":"29","line":10,"column":12,"nodeType":"30","messageId":"31","endLine":10,"endColumn":14,"suggestions":"32"},"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.\n- If you really want a type meaning \"any non-nullish value\", you probably want `NonNullable<unknown>` instead.","TSTypeLiteral","bannedTypeMessage",["33","34","35","36"],{"messageId":"37","data":"38","fix":"39","desc":"40"},{"messageId":"37","data":"41","fix":"42","desc":"43"},{"messageId":"37","data":"44","fix":"45","desc":"46"},{"messageId":"37","data":"47","fix":"48","desc":"49"},"bannedTypeReplacement",{"name":"50","replacement":"51"},{"range":"52","text":"51"},"Replace `{}` with `object`.",{"name":"50","replacement":"53"},{"range":"52","text":"53"},"Replace `{}` with `unknown`.",{"name":"50","replacement":"54"},{"range":"52","text":"54"},"Replace `{}` with `Record<string, never>`.",{"name":"50","replacement":"55"},{"range":"52","text":"55"},"Replace `{}` with `NonNullable<unknown>`.","{}","object",[301,303],"unknown","Record<string, never>","NonNullable<unknown>"]